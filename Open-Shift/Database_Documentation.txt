Database notes
	Tables are auto-incrementing
	all fields are required - no nulls allowed
CREATE_AVAILABILITY
•	Adds an availability
UPDATE_AVAILABILITY
• requires parameter @intAvailabilityID
• updates availability
DELETE_AVAILABILITY
• requires parameter @intAvailabilityID
• deletes availability
ADD_STORE
•	Adds a store location
ADD_STORE_HOURS
•	Adds store hours
DELETE_USER
• Requires parameter @intAssociateID
• sets user's status to inactive. NOTE* Does not actually delete user
DELETE_SHIFT
• Requires parameter @intShiftID
• Deletes shift
GET_ACTIVE_ASSOCIATES
•	Does not accept parameters
•	Returns all fields from TAssociates where the associate is labeled ‘active’
GET_ASSOCIATE_TITLES
•	Gets all associate titles
•	Intended to drop down box on pages for user to select when adding or updating a user
GET_AVAILABLE_ASSOCIATES
•	Gets associates with availability  during time frame
•	Accepts parameters 	@dtmStartTime[datetime] &	@dtmEndTime[datetime]
•	Returns intAssociateID & intAssociateTitleID & blnIsManager

GET_STATUSES
•	Gets statuses
•	Intended for drop down box so user can select when adding or updating
CREATE_SHIFT
•	Createns a shift
INSERT_USER
•	Inserts a user
SELECT_AVAILABILITY  
•	Requires input parameter @intAvailabiltyID
•	Assumes that each displayed availability is associated with its availabilityID
•	Returns everything from the availability table related to that availabilityID and the associate’s first name, last name & associate title
SELECT_SHIFT  - 
•	selects a shift for viewing
•	Takes a parameter @intShiftID
•	Assumes @intShiftID is saved with the shift when it is on the calendar

UPDATE_USER
•	Updates user information
•	Takes parameter @intAssociateID
•	Assumes @intAssociateID is being saved with associate

GET_AVAILABILITIES_MONTHLY
• Gets all availabilities for a month
• takes parameter @intMonth - a two digit numeric month
• returns:
				a.intAssociateID [AssociateID],
				a.intEmployeeNumber [EmpoloyeeNumber],
				a.strFirstName [LastName], 
				a.strLastName [FirstName], 
				CASE WHEN a.blnIsManager=0 THEN 'Not Manager' ELSE CASE WHEN a.blnIsManager=1 THEN 'Manager' END END [ManagerStatus],
				ast.strAssociateTitle [Title],
				av.dtmBeginAvailability AS [startTime],
				av.dtmEndAvailability AS [endTime],
				av.strNotes AS [Notes]

GET_AVAILABILITIES_MONTHLY_BY_ASSOCIATE
• Gets all availabilities for a month
• takes parameters
			@intAssociateID & @intMonth - a two digit numeric month
• returns:
				a.intAssociateID [AssociateID],
				a.intEmployeeNumber [EmpoloyeeNumber],
				a.strFirstName [LastName], 
				a.strLastName [FirstName], 
				CASE WHEN a.blnIsManager=0 THEN 'Not Manager' ELSE CASE WHEN a.blnIsManager=1 THEN 'Manager' END END [ManagerStatus],
				ast.strAssociateTitle [Title],
				av.dtmBeginAvailability AS [startTime],
				av.dtmEndAvailability AS [endTime],
				av.strNotes AS [Notes]

UPDATE_SHIFT
• updates a shift
• takes parameter @intShiftID

UPDATE_AVAILABILITY
•updates availability
• takes parameters
		@intAvailabilityID [INT],
		 @intAssociateID [int],
		@dtmBeginAvailability [datetime],
		@dtmEndAvailability [datetime],
		@strNotes [nvarchar](max) = ''
		
[GET_SHIFT_STORE_MONTH_YEAR]

[UPDATE_AVAILABILITY]

UPDATE_PASSWORD
takes @intAssociateID and @strPassword


INSERT_RESET_TOKEN
takes parameters @intAssociateID & @strPasswordResetToken
inserts reset token into associate title

GET_ASSOC_FROM_RESET_TOKEN
takes @intAssociateID and @strPasswordResetToken
selects all from TAssociates where id and reset token match

	